{"version":3,"sources":["app/form.html","app/home.html","app/initialize.js","app/streams.html"],"names":["Config","set","location","hostname","document","addEventListener","fetch","get","routes","view","View","from","require","args","links","home","streams","publishMessage","event","message","channel","status","bindTo","v","inputCanHaveHeaders","substr","outputCanHaveHeaders","submitRequest","method","body","input","headers","inputType","outputType","outputHeaders","inputHeaders","then","response","text","output","RuleSet","add","apply","Router","listen"],"mappings":"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","file":"docs/app.js","sourcesContent":["module.exports = \"<h1>Content-Type changer</h1>\\n\\n<!-- <div class = \\\"url-bar row\\\">\\n\\t<label class = \\\"bordered column\\\">\\n\\t\\tendpoint\\n\\t\\t<div class = \\\"row input-row\\\">\\n\\t\\t\\t<input cv-bind = \\\"urlPath\\\" />\\n\\t\\t\\t<button>GET</button>\\n\\t\\t</div>\\n\\t</label>\\n</div> -->\\n\\n<label class = \\\"bordered column\\\">\\n\\tinput\\n\\t<textarea cv-bind = \\\"input\\\" class = \\\"input\\\"></textarea>\\n</label>\\n\\n<div class = \\\"mid-bar\\\">\\n\\n\\t<div class = \\\"left-bar\\\">\\n\\n\\t\\t<label cv-if = \\\"inputCanHaveHeaders\\\">\\n\\t\\t\\tinput has headers\\n\\t\\t\\t<input type = \\\"checkbox\\\" cv-bind = \\\"inputHeaders\\\" value = \\\"1\\\" />\\n\\t\\t</label>\\n\\n\\t</div>\\n\\n\\t<div class = \\\"center-bar\\\">\\n\\n\\t\\t<select cv-bind = \\\"inputType\\\">\\n\\t\\t\\t<option value = \\\"text/plain\\\">text/plain</option>\\n\\t\\t\\t<option value = \\\"text/csv\\\">text/csv</option>\\n\\t\\t\\t<option value = \\\"text/tsv\\\">text/tsv</option>\\n\\t\\t\\t<option value = \\\"text/json\\\">text/json</option>\\n\\t\\t\\t<!-- <option value = \\\"text/yaml\\\">text/yaml</option> -->\\n\\t\\t</select>\\n\\n\\t\\t<button cv-on = \\\"click:submitRequest(event)\\\"> → </button>\\n\\n\\t\\t<select cv-bind = \\\"outputType\\\">\\n\\t\\t\\t<option value = \\\"text/plain\\\">text/plain</option>\\n\\t\\t\\t<option value = \\\"text/csv\\\">text/csv</option>\\n\\t\\t\\t<option value = \\\"text/tsv\\\">text/tsv</option>\\n\\t\\t\\t<option value = \\\"text/json\\\">text/json</option>\\n\\t\\t\\t<!-- <option value = \\\"text/yaml\\\">text/yaml</option> -->\\n\\t\\t</select>\\n\\n\\t</div>\\n\\n\\t<div class = \\\"right-bar\\\">\\n\\t\\t<label class = \\\"wide\\\" cv-if = \\\"outputCanHaveHeaders\\\">\\n\\t\\t\\t<input type = \\\"checkbox\\\" cv-bind = \\\"outputHeaders\\\" value = \\\"1\\\" />\\n\\t\\t\\toutput has headers\\n\\t\\t</label>\\n\\t\\t<button cv-on = \\\"click:switch(event)\\\">⇅</button>\\n\\t</div>\\n\\n</div>\\n\\n<label class = \\\"bordered column\\\">\\n\\t<textarea cv-bind = \\\"output\\\" class = \\\"output\\\" readonly=\\\"readonly\\\"></textarea>\\n\\toutput\\n</label>\\n\\n<div class = \\\"bordered status-bar\\\">\\n\\t[[status]]\\n</div>\\n\"","module.exports = \"<h1>Index of /</h1>\\n\\n<ul cv-each = \\\"links:link:title\\\">\\n\\t<li>\\n\\t\\t<a href = \\\"[[link]]\\\">\\n\\t\\t\\t[[title]]\\n\\t\\t</a>\\n\\t</li>\\n</ul>\\n\\n\"","import { Router   } from 'curvature/base/Router';\nimport { RuleSet }  from 'curvature/base/RuleSet';\nimport { Config }   from 'curvature/base/Config';\nimport { View }     from 'curvature/base/View';\n\nConfig.set('backend-origin', '//seanmorris-warehouse.herokuapp.com/');\n\nif(location.hostname == 'localhost')\n{\n\tConfig.set('backend-origin', '//localhost:2020');\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n\n\tfetch(Config.get('backend-origin'));\n\n\tconst routes = {\n\n\t\t'': () => {\n\n\t\t\tconst view = View.from(require('./home.html'));\n\n\t\t\tview.args.links = {\n\t\t\t\thome: '/'\n\t\t\t\t, 'type changer': 'type-changer'\n\t\t\t\t, streams: 'streams'\n\t\t\t};\n\n\t\t\treturn view;\n\t\t}\n\n\t\t, streams: () => {\n\t\t\tconst view = View.from(require('./streams.html'));\n\n\t\t\tview.publishMessage = (event) => {\n\t\t\t\tconst message = {};\n\t\t\t\tconst channel = 'test';\n\t\t\t};\n\n\t\t\treturn view;\n\t\t}\n\n\t\t, 'type-changer': () => {\n\n\t\t\tconst view = View.from(require('./form.html'));\n\n\t\t\tview.args.status = 'ready.';\n\n\t\t\tview.args.bindTo('inputType', v =>\n\t\t\t\tview.args.inputCanHaveHeaders = v && v.substr(-2,2) === 'sv'\n\t\t\t);\n\t\t\tview.args.bindTo('outputType', v =>\n\t\t\t\tview.args.outputCanHaveHeaders = v && v.substr(-2,2) === 'sv'\n\t\t\t);\n\n\t\t\tview.submitRequest = event => {\n\n\t\t\t\tview.args.status = 'executing request...';\n\n\t\t\t\tfetch(Config.get('backend-origin') + '/changeTypes', {\n\t\t\t\t\tmethod:    'POST'\n\t\t\t\t\t, body:    view.args.input\n\t\t\t\t\t, headers: {\n\t\t\t\t\t\t'Content-Type': view.args.inputType\n\t\t\t\t\t\t, 'Accept':     view.args.outputType\n\t\t\t\t\t\t, 'Ids-Output-Headers': view.args.outputHeaders ? 'true' : 'false'\n\t\t\t\t\t\t, 'Ids-Input-Headers':  view.args.inputHeaders  ? 'true' : 'false'\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.then(response => response.text())\n\t\t\t\t.then(response => {\n\t\t\t\t\tview.args.output = response;\n\t\t\t\t\tview.args.status = 'ready.';\n\t\t\t\t})\n\t\t\t};\n\n\t\t\tview.switch = event => {\n\t\t\t\tconst outputHeaders = view.args.outputHeaders;\n\t\t\t\tconst inputHeaders  = view.args.inputHeaders;\n\n\t\t\t\tconst outputType = view.args.outputType;\n\t\t\t\tconst inputType  = view.args.inputType;\n\n\t\t\t\tview.args.outputType = inputType;\n\t\t\t\tview.args.inputType  = outputType;\n\n\t\t\t\tview.args.outputHeaders = inputHeaders;\n\t\t\t\tview.args.inputHeaders  = outputHeaders;\n\n\t\t\t\t[view.args.input, view.args.output] = [view.args.output, view.args.input];\n\t\t\t};\n\n\t\t\treturn view;\n\t\t}\n\t};\n\n\tconst view = View.from('[[content]]');\n\n\tRuleSet.add('body', view);\n\tRuleSet.apply();\n\tRouter.listen(view, routes);\n});\n","module.exports = \"<button cv-on = \\\"click:publishMessage(event)\\\">pub</button>\\n\""]}