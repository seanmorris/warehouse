{"version":3,"sources":["app/form.html","app/initialize.js"],"names":["document","addEventListener","view","View","from","require","args","status","submitRequest","event","fetch","method","body","input","headers","inputType","outputType","outputHeaders","inputHeaders","then","response","text","output","RuleSet","add","apply","Router","listen"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;;;;ACAA;;AACA;;AACA;;AAEAA,QAAQ,CAACC,gBAAT,CAA0B,kBAA1B,EAA8C,YAAM;AACnD,MAAMC,IAAI,GAAGC,WAAKC,IAAL,CAAUC,OAAO,CAAC,aAAD,CAAjB,CAAb;;AAEAH,MAAI,CAACI,IAAL,CAAUC,MAAV,GAAmB,OAAnB;;AAEAL,MAAI,CAACM,aAAL,GAAqB,UAAAC,KAAK,EAAI;AAE7BP,QAAI,CAACI,IAAL,CAAUC,MAAV,GAAmB,sBAAnB;AAEAG,SAAK,CAAC,uBAAD,EAA0B;AAC9BC,YAAM,EAAK,MADmB;AAE5BC,UAAI,EAAKV,IAAI,CAACI,IAAL,CAAUO,KAFS;AAG5BC,aAAO,EAAE;AACV,wBAAgBZ,IAAI,CAACI,IAAL,CAAUS,SADhB;AAER,kBAAcb,IAAI,CAACI,IAAL,CAAUU,UAFhB;AAGR,8BAAsBd,IAAI,CAACI,IAAL,CAAUW,aAAV,GAA0B,MAA1B,GAAmC,OAHjD;AAIR,6BAAqBf,IAAI,CAACI,IAAL,CAAUY,YAAV,GAAyB,MAAzB,GAAkC;AAJ/C;AAHmB,KAA1B,CAAL,CAUCC,IAVD,CAUM,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KAVd,EAWCF,IAXD,CAWM,UAAAC,QAAQ,EAAI;AACjBlB,UAAI,CAACI,IAAL,CAAUgB,MAAV,GAAmBF,QAAnB;AACAlB,UAAI,CAACI,IAAL,CAAUC,MAAV,GAAmB,OAAnB;AACA,KAdD;AAeA,GAnBD;;AAqBAL,MAAI,UAAJ,GAAc,UAAAO,KAAK,EAAI;AACtB,QAAMQ,aAAa,GAAGf,IAAI,CAACI,IAAL,CAAUW,aAAhC;AACA,QAAMC,YAAY,GAAIhB,IAAI,CAACI,IAAL,CAAUY,YAAhC;AAEA,QAAMF,UAAU,GAAGd,IAAI,CAACI,IAAL,CAAUU,UAA7B;AACA,QAAMD,SAAS,GAAIb,IAAI,CAACI,IAAL,CAAUS,SAA7B;AAEAb,QAAI,CAACI,IAAL,CAAUU,UAAV,GAAuBD,SAAvB;AACAb,QAAI,CAACI,IAAL,CAAUS,SAAV,GAAuBC,UAAvB;AAEAd,QAAI,CAACI,IAAL,CAAUW,aAAV,GAA0BC,YAA1B;AACAhB,QAAI,CAACI,IAAL,CAAUY,YAAV,GAA0BD,aAA1B;AAXsB,eAagB,CAACf,IAAI,CAACI,IAAL,CAAUgB,MAAX,EAAmBpB,IAAI,CAACI,IAAL,CAAUO,KAA7B,CAbhB;AAarBX,QAAI,CAACI,IAAL,CAAUO,KAbW;AAaJX,QAAI,CAACI,IAAL,CAAUgB,MAbN;AActB,GAdD;;AAgBAC,mBAAQC,GAAR,CAAY,MAAZ,EAAoBtB,IAApB;;AACAqB,mBAAQE,KAAR;;AAEAC,iBAAOC,MAAP,CAAczB,IAAd;AACA,CA9CD","file":"docs/app.js","sourcesContent":["module.exports = \"<div class = \\\"url-bar row\\\">\\n\\t<label class = \\\"column\\\">\\n\\t\\tendpoint\\n\\t\\t<div class = \\\"row\\\">\\n\\t\\t\\t<input cv-bind = \\\"urlPath\\\" />\\n\\t\\t\\t<button>GET</button>\\n\\t\\t</div>\\n\\t</label>\\n</div>\\n\\n<label class = \\\"column\\\">\\n\\tinput\\n\\t<textarea cv-bind = \\\"input\\\"></textarea>\\n</label>\\n\\n<div class = \\\"mid-bar\\\">\\n\\n\\t<div class = \\\"left-bar\\\">\\n\\t\\t<!-- <select cv-bind = \\\"requestType\\\">\\n\\t\\t\\t<option>POST</option>\\n\\t\\t\\t<option>PATCH</option>\\n\\t\\t\\t<option>PUT</option>\\n\\t\\t\\t<option>DELETE</option>\\n\\t\\t\\t<option>OPTIONS</option>\\n\\t\\t</select> -->\\n\\t</div>\\n\\n\\t<div class = \\\"center-bar\\\">\\n\\n\\t\\t<label>\\n\\t\\t\\tinput has headers\\n\\t\\t\\t<input type = \\\"checkbox\\\" cv-bind = \\\"inputHeaders\\\" value = \\\"1\\\" />\\n\\t\\t</label>\\n\\n\\t\\t<select cv-bind = \\\"inputType\\\">\\n\\t\\t\\t<option value = \\\"text/plain\\\">text/plain</option>\\n\\t\\t\\t<option value = \\\"text/csv\\\">text/csv</option>\\n\\t\\t\\t<option value = \\\"text/tsv\\\">text/tsv</option>\\n\\t\\t\\t<option value = \\\"text/json\\\">text/json</option>\\n\\t\\t\\t<option value = \\\"text/yaml\\\">text/yaml</option>\\n\\t\\t</select>\\n\\n\\t\\t<button cv-on = \\\"click:submitRequest(event)\\\"> → </button>\\n\\n\\t\\t<select cv-bind = \\\"outputType\\\">\\n\\t\\t\\t<option value = \\\"text/plain\\\">text/plain</option>\\n\\t\\t\\t<option value = \\\"text/csv\\\">text/csv</option>\\n\\t\\t\\t<option value = \\\"text/tsv\\\">text/tsv</option>\\n\\t\\t\\t<option value = \\\"text/json\\\">text/json</option>\\n\\t\\t\\t<option value = \\\"text/yaml\\\">text/yaml</option>\\n\\t\\t</select>\\n\\n\\t\\t<label>\\n\\t\\t\\t<input type = \\\"checkbox\\\" cv-bind = \\\"outputHeaders\\\" value = \\\"1\\\" />\\n\\t\\t\\toutput has headers\\n\\t\\t</label>\\n\\t</div>\\n\\n\\t<div class = \\\"right-bar\\\">\\n\\t\\t<button cv-on = \\\"click:switch(event)\\\">⇅</button>\\n\\t</div>\\n\\n</div>\\n\\n<label class = \\\"column\\\">\\n\\toutput\\n\\t<textarea cv-bind = \\\"output\\\" readonly=\\\"readonly\\\"></textarea>\\n</label>\\n\\n<div class = \\\"row status-bar\\\">\\n\\t<input cv-bind = \\\"status\\\" readonly=\\\"readonly\\\" />\\n</div>\\n\"","import { Router   } from 'curvature/base/Router';\nimport { RuleSet }  from 'curvature/base/RuleSet';\nimport { View }     from 'curvature/base/View';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n\tconst view = View.from(require('./form.html'));\n\n\tview.args.status = 'ready';\n\n\tview.submitRequest = event => {\n\n\t\tview.args.status = 'executing request...';\n\n\t\tfetch('http://localhost:2020', {\n\t\t\tmethod:    'POST'\n\t\t\t, body:    view.args.input\n\t\t\t, headers: {\n\t\t\t\t'Content-Type': view.args.inputType\n\t\t\t\t, 'Accept':     view.args.outputType\n\t\t\t\t, 'ids-output-headers': view.args.outputHeaders ? 'true' : 'false'\n\t\t\t\t, 'ids-input-headers': view.args.inputHeaders ? 'true' : 'false'\n\t\t\t}\n\t\t})\n\t\t.then(response => response.text())\n\t\t.then(response => {\n\t\t\tview.args.output = response;\n\t\t\tview.args.status = 'ready';\n\t\t})\n\t};\n\n\tview.switch = event => {\n\t\tconst outputHeaders = view.args.outputHeaders;\n\t\tconst inputHeaders  = view.args.inputHeaders;\n\n\t\tconst outputType = view.args.outputType;\n\t\tconst inputType  = view.args.inputType;\n\n\t\tview.args.outputType = inputType;\n\t\tview.args.inputType  = outputType;\n\n\t\tview.args.outputHeaders = inputHeaders;\n\t\tview.args.inputHeaders  = outputHeaders;\n\n\t\t[view.args.input, view.args.output] = [view.args.output, view.args.input];\n\t};\n\n\tRuleSet.add('body', view);\n\tRuleSet.apply();\n\n\tRouter.listen(view);\n});\n"]}