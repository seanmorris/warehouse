{"version":3,"sources":["app/form.html","app/home.html","app/initialize.js","app/stream-index.html","app/streams.html"],"names":["Config","set","location","hostname","document","addEventListener","fetch","get","routes","view","View","from","require","args","links","home","streams","streamName","url","options","headers","Accept","then","response","json","eventLog","onServerEvent","event","unshift","data","JSON","parse","id","lastEventId","eventSource","EventSource","withCredentials","retry","onRemove","removeEventListener","bindTo","v","inputCanHaveHeaders","substr","publishMessage","credentials","method","body","input","String","fromCharCode","inputType","inputHeaders","text","output","status","toJson","x","stringify","outputCanHaveHeaders","submitRequest","outputType","outputHeaders","RuleSet","add","apply","Router","listen"],"mappings":"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","file":"docs/app.js","sourcesContent":["module.exports = \"<h1>Content-Type changer</h1>\\n\\n<!-- <div class = \\\"url-bar row\\\">\\n\\t<label class = \\\"bordered column\\\">\\n\\t\\tendpoint\\n\\t\\t<div class = \\\"row input-row\\\">\\n\\t\\t\\t<input cv-bind = \\\"urlPath\\\" />\\n\\t\\t\\t<button>GET</button>\\n\\t\\t</div>\\n\\t</label>\\n</div> -->\\n\\n<label class = \\\"bordered column\\\">\\n\\tinput\\n\\t<textarea cv-bind = \\\"input\\\" class = \\\"input\\\"></textarea>\\n</label>\\n\\n<div class = \\\"mid-bar\\\">\\n\\n\\t<div class = \\\"left-bar\\\">\\n\\n\\t\\t<label cv-if = \\\"inputCanHaveHeaders\\\">\\n\\t\\t\\tinput has headers\\n\\t\\t\\t<input type = \\\"checkbox\\\" cv-bind = \\\"inputHeaders\\\" value = \\\"1\\\" />\\n\\t\\t</label>\\n\\n\\t</div>\\n\\n\\t<div class = \\\"center-bar\\\">\\n\\n\\t\\t<select cv-bind = \\\"inputType\\\">\\n\\t\\t\\t<option value = \\\"text/plain\\\">text/plain</option>\\n\\t\\t\\t<option value = \\\"text/csv\\\">text/csv</option>\\n\\t\\t\\t<option value = \\\"text/tsv\\\">text/tsv</option>\\n\\t\\t\\t<option value = \\\"text/json\\\">text/json</option>\\n\\t\\t\\t<!-- <option value = \\\"text/yaml\\\">text/yaml</option> -->\\n\\t\\t</select>\\n\\n\\t\\t<button cv-on = \\\"click:submitRequest(event)\\\"> → </button>\\n\\n\\t\\t<select cv-bind = \\\"outputType\\\">\\n\\t\\t\\t<option value = \\\"text/plain\\\">text/plain</option>\\n\\t\\t\\t<option value = \\\"text/csv\\\">text/csv</option>\\n\\t\\t\\t<option value = \\\"text/tsv\\\">text/tsv</option>\\n\\t\\t\\t<option value = \\\"text/json\\\">text/json</option>\\n\\t\\t\\t<!-- <option value = \\\"text/yaml\\\">text/yaml</option> -->\\n\\t\\t</select>\\n\\n\\t</div>\\n\\n\\t<div class = \\\"right-bar\\\">\\n\\t\\t<label class = \\\"wide\\\" cv-if = \\\"outputCanHaveHeaders\\\">\\n\\t\\t\\t<input type = \\\"checkbox\\\" cv-bind = \\\"outputHeaders\\\" value = \\\"1\\\" />\\n\\t\\t\\toutput has headers\\n\\t\\t</label>\\n\\t\\t<button cv-on = \\\"click:switch(event)\\\">⇅</button>\\n\\t</div>\\n\\n</div>\\n\\n<label class = \\\"bordered column\\\">\\n\\t<textarea cv-bind = \\\"output\\\" class = \\\"output\\\" readonly=\\\"readonly\\\"></textarea>\\n\\toutput\\n</label>\\n\\n<div class = \\\"bordered status-bar\\\">\\n\\t[[status]]\\n</div>\\n\"","module.exports = \"<h1>Index of /</h1>\\n\\n<ul cv-each = \\\"links:link:title\\\">\\n\\t<li>\\n\\t\\t<a href = \\\"[[link]]\\\">\\n\\t\\t\\t[[title]]\\n\\t\\t</a>\\n\\t</li>\\n</ul>\\n\\n\"","import { Router   } from 'curvature/base/Router';\nimport { RuleSet }  from 'curvature/base/RuleSet';\nimport { Config }   from 'curvature/base/Config';\nimport { Model }    from 'curvature/model/Model';\nimport { View }     from 'curvature/base/View';\n\nConfig.set('backend-origin', '//seanmorris-warehouse.herokuapp.com/');\n\nif(location.hostname == 'localhost')\n{\n\tConfig.set('backend-origin', '//localhost:2020');\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n\n\tfetch(Config.get('backend-origin'));\n\n\tconst routes = {\n\n\t\t'': () => {\n\n\t\t\tconst view = View.from(require('./home.html'));\n\n\t\t\tview.args.links = {\n\t\t\t\thome: '/'\n\t\t\t\t, 'type changer': 'type-changer'\n\t\t\t\t, streams: 'streams'\n\t\t\t};\n\n\t\t\treturn view;\n\t\t}\n\n\t\t, 'streams': ({streamName}) => {\n\n\t\t\tconst view = View.from(require('./stream-index.html'));\n\n\t\t\tview.args.streams = [];\n\n\t\t\tconst url = Config.get('backend-origin') + '/activeStreams';\n\t\t\tconst options = {headers: {Accept: 'text/json'}};\n\n\t\t\tfetch(url, options).then(response => response.json()).then(streams => {\n\t\t\t\tview.args.streams = streams;\n\t\t\t});\n\n\t\t\treturn view;\n\t\t}\n\n\t\t, 'streams/%streamName': ({streamName}) => {\n\t\t\tconst view = View.from(require('./streams.html'));\n\n\t\t\tview.args.eventLog = [];\n\n\t\t\tview.args.streamName = streamName;\n\n\t\t\tconst onServerEvent = event => view.args.eventLog.unshift({\n\t\t\t\tclass:  'ServerEvent'\n\t\t\t\t, data: JSON.parse(event.data)\n\t\t\t\t, id:   event.lastEventId\n\t\t\t});\n\n\t\t\tconst url = Config.get('backend-origin') + '/subscribe/' + streamName;\n\n\t\t\tconst eventSource = new EventSource(url, {\n\t\t\t\twithCredentials: true\n\t\t\t\t, retry:         500\n\t\t\t});\n\n\t\t\teventSource.addEventListener('ServerEvent', onServerEvent);\n\n\t\t\tview.onRemove(()=>{\n\t\t\t\teventSource.removeEventListener('happened', onServerEvent);\n\t\t\t});\n\n\t\t\tview.args.bindTo('inputType', v =>\n\t\t\t\tview.args.inputCanHaveHeaders = v && v.substr(-2,2) === 'sv'\n\t\t\t);\n\n\t\t\tview.publishMessage = (event) => {\n\t\t\t\tfetch(Config.get('backend-origin') + '/publish/' + streamName, {\n\t\t\t\t\tcredentials: 'include'\n\t\t\t\t\t, method:    'POST'\n\t\t\t\t\t, body:      view.args.input ?? String.fromCharCode(0x0)\n\t\t\t\t\t, headers: {\n\t\t\t\t\t\t'Content-Type': view.args.inputType\n\t\t\t\t\t\t, 'Ids-Input-Headers':  view.args.inputHeaders  ? 'true' : 'false'\n\t\t\t\t\t}\n\t\t\t\t}).then(response => response.text()).then(response => {\n\t\t\t\t\tview.args.output = response;\n\t\t\t\t\tview.args.status = 'ready.';\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tview.toJson = x => JSON.stringify(x);\n\n\t\t\treturn view;\n\t\t}\n\n\t\t, 'type-changer': () => {\n\n\t\t\tconst view = View.from(require('./form.html'));\n\n\t\t\tview.args.status = 'ready.';\n\n\t\t\tview.args.bindTo('inputType', v =>\n\t\t\t\tview.args.inputCanHaveHeaders = v && v.substr(-2,2) === 'sv'\n\t\t\t);\n\n\t\t\tview.args.bindTo('outputType', v =>\n\t\t\t\tview.args.outputCanHaveHeaders = v && v.substr(-2,2) === 'sv'\n\t\t\t);\n\n\t\t\tview.submitRequest = event => {\n\n\t\t\t\tview.args.status = 'executing request...';\n\n\t\t\t\tfetch(Config.get('backend-origin') + '/changeTypes', {\n\t\t\t\t\tmethod:    'POST'\n\t\t\t\t\t, body:    view.args.input\n\t\t\t\t\t, headers: {\n\t\t\t\t\t\t'Content-Type': view.args.inputType\n\t\t\t\t\t\t, 'Accept':     view.args.outputType\n\t\t\t\t\t\t, 'Ids-Output-Headers': view.args.outputHeaders ? 'true' : 'false'\n\t\t\t\t\t\t, 'Ids-Input-Headers':  view.args.inputHeaders  ? 'true' : 'false'\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.then(response => response.text())\n\t\t\t\t.then(response => {\n\t\t\t\t\tview.args.output = response;\n\t\t\t\t\tview.args.status = 'ready.';\n\t\t\t\t})\n\t\t\t};\n\n\t\t\tview.switch = event => {\n\t\t\t\tconst outputHeaders = view.args.outputHeaders;\n\t\t\t\tconst inputHeaders  = view.args.inputHeaders;\n\n\t\t\t\tconst outputType = view.args.outputType;\n\t\t\t\tconst inputType  = view.args.inputType;\n\n\t\t\t\tview.args.outputType = inputType;\n\t\t\t\tview.args.inputType  = outputType;\n\n\t\t\t\tview.args.outputHeaders = inputHeaders;\n\t\t\t\tview.args.inputHeaders  = outputHeaders;\n\n\t\t\t\t[view.args.input, view.args.output] = [view.args.output, view.args.input];\n\t\t\t};\n\n\t\t\treturn view;\n\t\t}\n\t};\n\n\tconst view = View.from('[[content]]');\n\n\tRuleSet.add('body', view);\n\tRuleSet.apply();\n\tRouter.listen(view, routes);\n});\n","module.exports = \"<ul cv-each = \\\"streams:stream\\\">\\n\\t<li><a href = \\\"/streams/[[stream]]\\\">[[stream]]</a></li>\\n</ul>\\n\"","module.exports = \"<h1>[[streamName]]</h1>\\n\\n<label class = \\\"bordered column\\\">\\n\\tinput\\n\\t<textarea cv-bind = \\\"input\\\" class = \\\"input\\\"></textarea>\\n</label>\\n\\n<div class = \\\"mid-bar\\\">\\n\\n\\t<div class = \\\"left-bar\\\">\\n\\n\\t\\t<label cv-if = \\\"inputCanHaveHeaders\\\">\\n\\t\\t\\tinput has headers\\n\\t\\t\\t<input type = \\\"checkbox\\\" cv-bind = \\\"inputHeaders\\\" value = \\\"1\\\" />\\n\\t\\t</label>\\n\\n\\t</div>\\n\\n\\t<div class = \\\"center-bar\\\">\\n\\n\\t\\t<select cv-bind = \\\"inputType\\\">\\n\\t\\t\\t<option value = \\\"text/plain\\\">text/plain</option>\\n\\t\\t\\t<option value = \\\"text/csv\\\">text/csv</option>\\n\\t\\t\\t<option value = \\\"text/tsv\\\">text/tsv</option>\\n\\t\\t\\t<option value = \\\"text/json\\\">text/json</option>\\n\\t\\t\\t<!-- <option value = \\\"text/yaml\\\">text/yaml</option> -->\\n\\t\\t</select>\\n\\n\\t\\t<button cv-on = \\\"click:publishMessage(event)\\\"> publishMessage → </button>\\n\\t</div>\\n\\n</div>\\n\\n<label class = \\\"bordered column\\\">\\n\\n\\t<ul class = \\\"event-log\\\" cv-each = \\\"eventLog:event:i\\\">\\n\\t\\t<li cv-with = \\\"event\\\" cv-carry = \\\"i\\\">\\n\\t\\t\\tid: [[id]] user: [[data.user]] payload: [[data.payload|toJson]]\\n\\t\\t</li>\\n\\t</ul>\\n\\n\\t<div class = \\\"bottom\\\">output</div>\\n\\n</label>\\n\""]}